#redis开关
redis.open=false
#redis服务器IP
redis.host=127.0.0.1
#端口
redis.port=6379
#连接超时时间(5秒)
redis.timeout=5000
#最大连接数, 默认8个
redis.maxTotal=150
#最大空闲连接数, 默认8个
redis.maxIdle=30
#最小空闲连接数, 默认0
redis.minIdle=10
#获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间, 默认-1
redis.maxWaitMillis=3000
#在获取连接的时候检查有效性, 默认false
redis.testOnBorrow=false
#在返还连接的时候检查有效性, 默认false
redis.testOnReturn=false
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true
#逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=60000
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断 (默认逐出策略)
redis.softMinEvictableIdleTimeMillis=1000
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.setTimeBetweenEvictionRunsMillis=1000
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
redis.setNumTestsPerEvictionRun=100